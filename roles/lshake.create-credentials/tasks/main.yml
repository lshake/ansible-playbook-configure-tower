---
# tasks file for lshake.create-credentials

- name: create credentials types for this organization
  tower_credential_type:
    name: "{{ item.name }}"
    description: "{{ item.description | default(omit) }}"
    state: "{{ item.state }}"
    kind: "{{ item.kind }}"
    inputs: "{{ item.inputs }}"
    injectors: "{{ item.injectors }}"
    vault_password: "{{ item.vault_password | default(omit) }}"
    tower_host: "{{ ansible_tower.url | default(omit) }}"
    tower_username: "{{ ansible_tower.tower_username | default(omit) }}"
    tower_password: "{{ ansible_tower.tower_password | default(omit) }}"
    tower_verify_ssl: "{{ ansible_tower.verify_ssl | default('true') }}"
  loop: "{{ ansible_tower.credential_types }}"
  loop_control:
    label: "{{ item.name }}"

- name: create credentials for this organization
  tower_credential:
    name: "{{ item.1.name }}"
    description: "{{ item.1.description | default(omit) }}"
    organization: "{{ item.0.name }}"
    state: "{{ item.1.state }}"
    kind: "{{ item.1.kind }}"
    username: "{{ item.1.username | default(omit) }}"
    password: "{{ item.1.password | default(omit) }}"
    ssh_key_data: "{{ item.1.ssh_key_data | default(omit) }}"
    ssh_key_unlock: "{{ item.1.ssh_key_unlock | default(omit) }}"
    vault_password: "{{ item.1.vault_password | default(omit) }}"
    tower_host: "{{ ansible_tower.url | default(omit) }}"
    tower_username: "{{ ansible_tower.tower_username | default(omit) }}"
    tower_password: "{{ ansible_tower.tower_password | default(omit) }}"
    tower_verify_ssl: "{{ ansible_tower.verify_ssl | default('true') }}"
    host: "{{ item.1.host | default(omit) }}"
  loop: "{{ ansible_tower.organizations | subelements('credentials') }}"
  loop_control:
    label: "{{ item.0.name }} {{ item.1.name }}"
  no_log: "{{ ansible_debug_no_log | default('true') }}"

- name: create custom credentials
  include_tasks: custom_credentials.yml
  loop: "{{ ansible_tower.organizations | subelements('custom_credentials') }}"
  loop_control:
    loop_var: this_custom_credential
    label: "{{ this_custom_credential.0.name }} {{ this_custom_credential.1.name }}"
  no_log: "{{ ansible_debug_no_log | default('true') }}"
  when:
    - this_custom_credential.1.type is defined
    - this_custom_credential.1.state == 'present'
