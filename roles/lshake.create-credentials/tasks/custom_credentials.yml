- name: lookup the the credentials type "{{ this_custom_credential.1.name }}"
  uri:
    url: "{{ ansible_tower.url | regex_replace('\\/$','')}}/api/v2/credential_types/?search={{ this_custom_credential.1.type }}"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: GET
    return_content: yes
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: "{{ ansible_tower.verify_ssl | default('true') }}"
  register: credential_type_lookup

- name: debug the custom credential we're working with
  debug:
    var: credential_type_lookup
    verbosity: 2

- name: lookup the organization id "{{ this_custom_credential.0.name }}"
  uri:
    url: "{{ ansible_tower.url | regex_replace('\\/$','')}}/api/v2/organizations/?search={{ this_custom_credential.0.name }}"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: GET
    return_content: yes
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: "{{ ansible_tower.verify_ssl | default('true') }}"
  register: organization_id_lookup

- name: lookup the user id "{{ ansible_tower.admin_username }}"
  uri:
    url: "{{ ansible_tower.url | regex_replace('\\/$','')}}/api/v2/users/?search={{ ansible_tower.admin_username }}"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: GET
    return_content: yes
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: "{{ ansible_tower.verify_ssl | default('true') }}"
  register: user_id_lookup

# Should assert here if the custom credential type doesn't exist
# Or if we got more than one match from the searches

- name: lookup the credential to see if we need to create or patch it "{{ ansible_tower.admin_username }}"
  uri:
    url: "{{ ansible_tower.url | regex_replace('\\/$','')}}/api/v2/credentials/?search={{ this_custom_credential.1.name }}"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: GET
    return_content: yes
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: "{{ ansible_tower.verify_ssl | default('true') }}"
  register: custom_credential_id_lookup

- name: create the custom credential "{{ this_custom_credential.1.name }}"
  uri:
    url: "{{ ansible_tower.url | regex_replace('\\/$','')}}/api/v2/credentials/"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: POST
    body:
      name: "foreman_credential_shakeytowers_lab"
      description:
      credential_type: "{{ credential_type_lookup.json.results.0.id }}"
      inputs: "{{ this_custom_credential.1.inputs }}"
      organization: "{{ organization_id_lookup.json.results.0.id }}"
      user: "{{ user_id_lookup.json.results.0.id }}"
    body_format: 'json'
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: "{{ ansible_tower.verify_ssl | default('true') }}"
    status_code: [201]
  when:
    - credential_type_lookup.json.count == 1
    - custom_credential_id_lookup.json.count == 0

- name: update the custom credential "{{ this_custom_credential.1.name }}"
  uri:
    url: "{{ ansible_tower.url | regex_replace('\\/$','')}}/api/v2/credentials/{{ custom_credential_id_lookup.json.results.0.id }}/"
    user: "{{ ansible_tower.admin_username | default(default_ansible_tower_admin_username) }}"
    password: "{{ ansible_tower.admin_password }}"
    force_basic_auth: yes
    method: PUT
    body:
      name: "foreman_credential_shakeytowers_lab"
      description:
      credential_type: "{{ credential_type_lookup.json.results.0.id }}"
      inputs: "{{ this_custom_credential.1.inputs }}"
      organization: "{{ organization_id_lookup.json.results.0.id }}"
      user: "{{ user_id_lookup.json.results.0.id }}"
    body_format: 'json'
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: "{{ ansible_tower.verify_ssl | default('true') }}"
    status_code: [200]
  when:
    - credential_type_lookup.json.count == 1
    - custom_credential_id_lookup.json.count == 1
  no_log: "{{ ansible_debug_no_log | default('true') }}"

